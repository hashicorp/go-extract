name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  unit:

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:

    - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9

    - name: Set up Go
      uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe
      with:
        go-version: '1.21'

    - name: Test
      id: test
      run: |
        make test

    - name: Test (as root)
      if: matrix.os != 'windows-latest'
      id: sudo-test
      run: |
        make sudo_test

    

  fuzzing:

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:

    - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9

    - name: Set up Go
      uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe
      with:
        go-version: '1.21'

    - name: Test
      id: test
      run: |
        make fuzz

    - name: Get list of uncommitted files
      if: always()
      id: uncommitted
      shell: bash
      run: |
        uncommitted_files=$(git ls-files --others --exclude-standard)
        echo "::set-output name=stdout::$uncommitted_files"

    - name: upload all files from uncommitted list
      if: always()
      id: upload
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: test_inputs_${{ runner.os }}
        path: |
          ${{ steps.uncommitted.outputs.stdout }}
      
